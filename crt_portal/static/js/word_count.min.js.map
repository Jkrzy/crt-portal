{"version":3,"file":"word_count.min.js","sources":["word_count.js"],"sourcesContent":["// Polyfill Array.from for IE11: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n  Array.from = (function() {\n    var toStr = Object.prototype.toString;\n    var isCallable = function(fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    var toInteger = function(value) {\n      var number = Number(value);\n      if (isNaN(number)) {\n        return 0;\n      }\n      if (number === 0 || !isFinite(number)) {\n        return number;\n      }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n    var toLength = function(value) {\n      var len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(arrayLike /*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T;\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      var k = 0;\n      // 17. Repeat, while k < lenâ€¦ (also steps a - h)\n      var kValue;\n      while (k < len) {\n        kValue = items[k];\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  })();\n}\n\n(function(root, document) {\n  var translations = root.CRT.translations;\n  var textAreaElem500 = document.getElementsByClassName('word-count-500');\n  var textAreaElem10 = document.getElementsByClassName('word-count-10');\n\n  // \"Words remaining\" message\n  var wordLimitMessage = document.getElementById('word_limit_message');\n\n  // Word limit alert states (visual and for screen readers)\n  var wordLimitAlert = document.getElementById('word_limit_alert');\n  var wordLimitScreenReaderText = document.getElementById('word_limit_sr_text');\n\n  // Wraps both \"words remaining\" message and alert state\n  var wordCountArea = document.getElementById('word_count_area');\n\n  // Show word count area for JS-enabled browsers\n  if (wordCountArea) {\n    wordCountArea.removeAttribute('hidden');\n  }\n\n  function onBelowLimit(wordCount, max, textAreaElem) {\n    var wordsRemaining = Number(max - wordCount);\n    var description =\n      wordsRemaining === 1 ? translations.wordRemainingText : translations.wordsRemainingText;\n\n    // Unset alert states\n    wordLimitAlert.setAttribute('hidden', ''); // hide\n    textAreaElem.classList.remove('bg-gold-outline');\n    textAreaElem.setAttribute('aria-invalid', 'false');\n\n    // Update word counter\n    wordLimitMessage.removeAttribute('hidden');\n    wordLimitMessage.innerHTML = wordsRemaining + ' ' + description;\n  }\n\n  function onEqualOrExceedLimit(value, max, textAreaElem) {\n    // Thank you Stack Overflow users Michal and Steve Bradshaw\n    // for the examples of trim-to-word-count! https://stackoverflow.com/a/47136558\n\n    // Find all whitespace characters (newline, tab) and use to trim to\n    // the max number of words:\n    var trimmed = value.split(/(\\s+)/, max * 2 - 1).join('');\n    textAreaElem.value = trimmed;\n\n    // Unset message\n    wordLimitMessage.setAttribute('hidden', ''); // hide\n\n    // Set alert state\n    textAreaElem.setAttribute('aria-invalid', 'true');\n    textAreaElem.classList.add('bg-gold-outline');\n    wordLimitAlert.removeAttribute('hidden');\n\n    var messageText = String(max) + translations.wordLimitReachedText;\n    wordLimitScreenReaderText.innerText = messageText;\n  }\n\n  function isA11yAssertive(el) {\n    return el.getAttribute('aria-live') === 'assertive';\n  }\n\n  function updateWordCount(e, max, textAreaElem) {\n    // Initial validation; throw a helpful error if somehow we\n    // aren't getting the data we need from the HTML\n    if (!max || typeof max !== 'number') {\n      throw 'Missing or invalid argument: max';\n    }\n    if (!textAreaElem) {\n      throw 'Missing argument: textAreaElem';\n    }\n\n    // Ignore `e` and read the value directly from the textarea;\n    // we want this function to work even if the user hasn't typed\n    // anything (e.g. if textarea has initial content).\n    //\n    // Trim the start of the string because leading whitespace\n    // messes with our word count function.\n    var value = textAreaElem.value.replace(/^\\s+/, '');\n\n    // Match groups of non-whitespace characters, i.e. words.\n    var wordMatch = value.match(/\\S+/g);\n    var wordCount = wordMatch ? wordMatch.length : 0;\n\n    if (wordCount >= max) {\n      onEqualOrExceedLimit(value, max, textAreaElem);\n    } else {\n      onBelowLimit(wordCount, max, textAreaElem);\n    }\n\n    if (wordCount >= (max * 4) / 5 && !isA11yAssertive(wordLimitMessage)) {\n      wordLimitMessage.setAttribute('aria-live', 'assertive');\n    } else if (isA11yAssertive(wordLimitMessage)) {\n      wordLimitMessage.setAttribute('aria-live', 'polite');\n    }\n  }\n\n  function listenWordCount(e) {\n    if (textAreaElem500.length > 0) {\n      updateWordCount(\n        e,\n        (max = 500),\n        (textAreaElem = document.getElementById(textAreaElem500[0].id))\n      );\n    }\n\n    if (textAreaElem10.length > 0) {\n      updateWordCount(\n        e,\n        (max = 10),\n        (textAreaElem = document.getElementById(textAreaElem10[0].id))\n      );\n    }\n  }\n\n  // Add listeners only to word-limited elements\n  const wordLimitedElements = Array.from(textAreaElem500).concat(Array.from(textAreaElem10));\n  wordLimitedElements.forEach(function(element) {\n    element.addEventListener('keyup', listenWordCount);\n  });\n\n  // Fire `updateWordCount()` on page load because textarea may have\n  // some initial content; for example if the user fills in the textarea,\n  // presses \"Next\" and then uses the back button to navigate back.\n  // assuming only one per page\n  listenWordCount();\n})(window, document);\n"],"names":["Array","from","isCallable","fn","toStr","call","toLength","value","len","number","Number","isNaN","isFinite","Math","floor","abs","toInteger","min","max","maxSafeInteger","Object","prototype","toString","pow","arrayLike","items","TypeError","T","mapFn","arguments","length","kValue","A","this","k","root","document","translations","CRT","textAreaElem500","getElementsByClassName","textAreaElem10","wordLimitMessage","getElementById","wordLimitAlert","wordLimitScreenReaderText","wordCountArea","isA11yAssertive","el","getAttribute","updateWordCount","e","textAreaElem","replace","wordMatch","match","wordCount","trimmed","split","join","setAttribute","classList","add","removeAttribute","messageText","String","wordLimitReachedText","innerText","wordsRemaining","description","wordRemainingText","wordsRemainingText","remove","innerHTML","listenWordCount","id","wordLimitedElements","concat","forEach","element","addEventListener","window"],"mappings":"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"}