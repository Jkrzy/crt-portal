# Generated by Django 4.2.3 on 2023-12-20 16:47
import logging

from django.contrib.auth import get_user_model
from django.contrib.contenttypes.models import ContentType
from django.core.paginator import Paginator
from django.db import migrations
from django.db.models import Q


def backfill_ten_year_retention(apps, schema_editor):
    del schema_editor  # unused
    RetentionSchedule = apps.get_model('cts_forms', 'RetentionSchedule')
    Report = apps.get_model('cts_forms', 'Report')
    User = get_user_model()
    Action = apps.get_model('actstream', 'Action')

    ten_year = RetentionSchedule.objects.get(retention_years=10)
    report_type_id = ContentType.objects.get_for_model(Report).pk
    user_type_id = ContentType.objects.get_for_model(User).pk
    system_user_id = User.objects.get(username='system.user').pk

    reports = Report.objects.filter(
        Q(dj_number__isnull=True) | Q(dj_number='') | Q(dj_number='--'),
        retention_schedule__isnull=True,
        status='closed',
    ).exclude(
        litigation_hold=True,
    )

    paginator = Paginator(reports.order_by('id').values_list('id', flat=True),
                          10000)
    for page_number in range(paginator.num_pages):
        logging.info(f'Applying {page_number + 1} of {paginator.num_pages}')
        Action.objects.bulk_create([
            Action(verb='Retention schedule:',
                   description='Migrated from "None" to "10 Year"',
                   target_object_id=report_id,
                   actor_object_id=system_user_id,
                   actor_content_type_id=user_type_id,
                   target_content_type_id=report_type_id)
            for report_id in
            paginator.get_page(page_number + 1)
        ])

    reports.update(retention_schedule=ten_year)


class Migration(migrations.Migration):

    dependencies = [
        ('cts_forms', '0190_alter_retentionschedule_options'),
    ]

    operations = [
        # NOTE: This is causing problems on production, so we're disabling it:
        migrations.RunPython(migrations.RunPython.noop,
                             migrations.RunPython.noop),
    ]
