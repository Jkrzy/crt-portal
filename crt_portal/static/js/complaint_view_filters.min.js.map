{"version":3,"file":"complaint_view_filters.min.js","sources":["complaint_view_filters.js"],"sourcesContent":["(function(root, dom) {\n  /**\n   * Convert an array-like object to an array.\n   *\n   * NodeLists, such as those returned via a form's `elements`\n   * property, can be accessed like arrays but are missing\n   * their interation helpers. This allows us to call methods like\n   * `.forEach` and `.map` on them.\n   */\n  function toArray(arrayLike) {\n    return Array.prototype.slice.call(arrayLike);\n  }\n\n  // 'Box' an element in an array if it isn't one currently\n  function wrapValue(maybeUnboxed) {\n    return Array.isArray(maybeUnboxed) ? maybeUnboxed : [maybeUnboxed];\n  }\n\n  /**\n   * Converts a query string into an object, where the key is the\n   * name of the query and the value is an array of all values associated\n   * with that query.\n   *\n   * Necessary because we can have multiple filters / search params\n   * with the same name, and they all need to be passed in the final query.\n   *\n   * @param {String} queryString The query string we want to convert into an object\n   * @param {Array} paramsWhitelist The list of params accepted as search filters\n   * @returns {Object} Map of all params and their URL encoded values\n   */\n  function getQueryParams(queryString, paramsWhitelist) {\n    var paramsMap = {};\n    var search = new URLSearchParams(queryString);\n    var acceptedParams = (paramsWhitelist instanceof Array && paramsWhitelist) || [];\n\n    search.forEach(function(value, filterName) {\n      if (acceptedParams.indexOf(filterName) >= 0) {\n        paramsMap[filterName] = paramsMap[filterName] || [];\n\n        if (paramsMap[filterName].indexOf(value) < 0) {\n          paramsMap[filterName].push(encodeURIComponent(value));\n        }\n      }\n    });\n\n    return paramsMap;\n  }\n\n  /**\n   * Given an object of query parameters, convert them back into a string\n   * @param {Object} paramsObj The key/vslue pairs to be turned into query params\n   * @returns {Array} A list of URI-encoded query param strings\n   */\n  function makeQueryParams(params) {\n    var keys = Object.keys(params);\n    return keys.reduce(function(memo, key) {\n      var paramValue = params[key];\n\n      if (!paramValue || !paramValue.length) {\n        return memo;\n      }\n\n      var valueToList = wrapValue(paramValue);\n      var paramsString = valueToList\n        .reduce(function(accum, value) {\n          accum.push(makeQueryParam(key, value));\n\n          return accum;\n        }, [])\n        .join('&');\n\n      memo.push(paramsString);\n\n      return memo;\n    }, []);\n  }\n\n  /**\n   * Build a URI-encoded query paramater\n   * @param {String} key The name of the query param\n   * @param {String} value The value of the query param\n   * @returns {String} Param in the format of {key}={value}\n   */\n  function makeQueryParam(key, value) {\n    return key + '=' + encodeURIComponent(value);\n  }\n\n  /**\n   * Concat all previous params together\n   * @param {Array} params An array of URI-encoded query param strings\n   * @returns {String} The strings joined as a single ampersand-delimited string\n   */\n  function finalizeQueryParams(params) {\n    return params.length ? params.join('&') : '';\n  }\n\n  /**\n   * filterDataModel and the mutation function below control the `model` behavior\n   * of the filters\n   */\n\n  var initialFilterState = {\n    status: [],\n    location_state: [],\n    primary_complaint: [],\n    contact_first_name: '',\n    contact_last_name: '',\n    contact_email: '',\n    violation_summary: [],\n    location_name: '',\n    location_address_line_1: '',\n    location_address_line_2: '',\n    location_city_town: '',\n    create_date_start: '',\n    create_date_end: '',\n    summary: '',\n    assigned_to: '',\n    public_id: '',\n    primary_statute: '',\n    reported_reason: [],\n    commercial_or_public_place: [],\n    intake_format: [],\n    servicemember: [],\n    hate_crime: [],\n    referred: [],\n    sort: '',\n    page: '',\n    per_page: '',\n    no_status: '',\n    language: [],\n    correctional_facility_type: []\n  };\n  var filterDataModel = {};\n\n  /**\n   * Mutate the current filter state with updated filter values\n   * @param {Object} state The current filter state\n   * @param {Object} updates The properties of the filter state to be updated\n   */\n  function mutateFilterDataWithUpdates(state, updates) {\n    for (const [key, value] of Object.entries(updates)) {\n      if (state.hasOwnProperty(key)) {\n        state[key] = decodeFormData(value);\n      }\n    }\n  }\n\n  function decodeFormData(data) {\n    if (Array.isArray(data)) {\n      return data.map(decodeURIComponent);\n    }\n    return decodeURIComponent(data);\n  }\n\n  /**\n   * The following functions represent the 'views' for this  application â€”\n   * these are the components that wire up event handling behavior to\n   * specific DOM nodes.\n   *\n   * Each view takes a `props` object, which, at a minimum, accepts an `el` property, which is\n   * a pointer to the DOM node we want to add interactive behavior to.\n   */\n\n  /**\n   * View to control filter tag behavior\n   * @param {Object} props\n   * @param {HTMLElement} props.el The DOM node this view manages\n   */\n  function filterTagView(props) {\n    var filters = props.el;\n    var onClickHandler = props.onClick;\n\n    filters.addEventListener('click', function handleFilterTagClick(event) {\n      var node = event.target;\n      if (node.tagName === 'BUTTON') {\n        onClickHandler(node);\n      }\n    });\n  }\n\n  /**\n   * View to control form element\n   * @param {Object} props\n   * @param {HTMLElement} props.el The DOM node this view manages\n   */\n  function formView(props) {\n    var form = props.el;\n\n    form.addEventListener('submit', function handleSubmit(event) {\n      event.preventDefault();\n\n      formView.doSearch(form);\n    });\n  }\n\n  /**\n   * Create a query param string from our filter data model, and update the URL\n   * in the browser to perform a new search with the applied filters\n   */\n  formView.doSearch = function doSearch(form) {\n    var preparedFilters = finalizeQueryParams(makeQueryParams(filterDataModel));\n    var finalQuery = '';\n    if (preparedFilters) {\n      finalQuery = '?' + preparedFilters;\n    }\n    window.location = form.action + finalQuery;\n  };\n\n  /**\n   * View to control multiselect element behavior\n   * @param {Object} props\n   * @param {HTMLElement} props.el The DOM node this view manages\n   */\n  function multiSelectView(props) {\n    props.el.addEventListener('change', function(event) {\n      filterDataModel[props.name] = multiSelectView.getValues(event.target);\n    });\n  }\n\n  multiSelectView.getValues = function(select) {\n    var options = toArray((select && select.options) || []);\n\n    function isSelected(option) {\n      return option.selected;\n    }\n\n    function unwrapValue(x) {\n      return x.value;\n    }\n\n    return options.filter(isSelected).map(unwrapValue);\n  };\n\n  function checkBoxView(props) {\n    for (var i = 0; i < props.el.length; i++) {\n      props.el[i].addEventListener('change', function(event) {\n        checkBoxView.getValues(event.target);\n      });\n    }\n  }\n\n  checkBoxView.getValues = function(el) {\n    if (el.checked) {\n      filterDataModel[event.target.name].push(el.value);\n    } else {\n      var index = filterDataModel[event.target.name].indexOf(el.value);\n      filterDataModel[event.target.name].splice(index, 1);\n    }\n  };\n\n  /**\n   * View to control text input element behavior\n   * @param {Object} props\n   * @param {HTMLElement} props.el The DOM node this view manages\n   * @param {String} props.name The key in the filter data model that corresponds to the data to update\n   */\n  function textInputView(props) {\n    if (!props.el || !props.name) {\n      throw new Error(\n        'Component must be supplied with a valid DOM node and a `name` key corresponding to a key in the filterDataModel object'\n      );\n    }\n\n    props.el.addEventListener('change', function(event) {\n      filterDataModel[props.name] = event.target.value;\n    });\n  }\n\n  function clearFiltersView(props) {\n    props.el.addEventListener('click', props.onClick);\n  }\n\n  function filterController() {\n    var formEl = dom.getElementById('filters-form');\n    var firstNameEl = formEl.querySelector('input[name=\"contact_first_name\"');\n    var lastNameEl = formEl.querySelector('input[name=\"contact_last_name\"');\n    var locationCityEl = formEl.querySelector('input[name=\"location_city_town\"]');\n    var locationNameEl = formEl.querySelector('input[name=\"location_name\"]');\n    var locationStateEl = dom.getElementsByName('location_state');\n    var activeFiltersEl = dom.querySelector('[data-active-filters]');\n    var clearAllEl = dom.querySelector('[data-clear-filters]');\n    var statusEl = dom.getElementsByName('status');\n    var summaryEl = formEl.querySelector('input[name=\"summary\"]');\n    var createdatestartEl = formEl.querySelector('input[name=\"create_date_start');\n    var createdateendEl = formEl.querySelector('input[name=\"create_date_end');\n    var assigneeEl = formEl.querySelector('#id_assigned_to');\n    var complaintIDEl = formEl.querySelector('input[name=\"public_id\"');\n    var statuteEl = formEl.querySelector('select[name=\"primary_statute\"]');\n    var personalDescriptionEl = formEl.querySelector('input[name=\"violation_summary\"]');\n    var primaryIssueEl = dom.getElementsByName('primary_complaint');\n    var reportedReasonEl = dom.getElementsByName('reported_reason');\n    var relevantDetailsEl = dom.getElementsByName('commercial_or_public_place');\n    var intakeFormatEl = dom.getElementsByName('intake_format');\n    var hateCrimeEl = dom.getElementsByName('hate_crime');\n    var servicememberEl = dom.getElementsByName('servicemember');\n    var contactEmailEl = dom.querySelector('input[name=\"contact_email\"]');\n    var referredEl = dom.getElementsByName('referred');\n    var languageEl = dom.getElementsByName('language');\n    var correctionalFacilityTypeEl = dom.getElementsByName('correctional_facility_type');\n    /**\n     * Update the filter data model when the user clears (clicks on) a filter tag,\n     * and perform a new search with the updated filters applied.\n     * @param {HTMLElement} node An HTML element\n     */\n    function onFilterTagClick(node) {\n      var filterName = node.getAttribute('data-filter-name');\n\n      // see if we have to process multiple select elements first\n      var multiSelectElements = [\n        'status',\n        'location_state',\n        'violation_summary',\n        'primary_complaint',\n        'intake_format',\n        'commercial_or_public_place',\n        'reported_reason',\n        'language',\n        'correctional_facility_type'\n      ];\n      var filterIndex = multiSelectElements.indexOf(filterName);\n      if (filterIndex !== -1) {\n        var selections = filterDataModel[filterName];\n        var selectionData = node.getAttribute('data-filter-value');\n        selections.splice(selections.indexOf(selectionData), 1);\n        filterDataModel[filterName] = selections;\n      } else {\n        filterDataModel[filterName] = '';\n      }\n\n      formView.doSearch(formEl);\n    }\n\n    function clearAllFilters() {\n      const activeFilters = toArray(activeFiltersEl.children);\n\n      var updates = activeFilters.reduce(function(updates, node) {\n        var filterName = node.getAttribute('data-filter-name');\n        var currentFilterData = filterDataModel[filterName];\n        currentFilterData = wrapValue(currentFilterData);\n        if (currentFilterData.length) {\n          updates[filterName] = initialFilterState[filterName];\n        }\n\n        return updates;\n      }, {});\n\n      mutateFilterDataWithUpdates(filterDataModel, updates);\n      formView.doSearch(formEl);\n    }\n\n    formView({\n      el: formEl\n    });\n    textInputView({\n      el: firstNameEl,\n      name: 'contact_first_name'\n    });\n    textInputView({\n      el: lastNameEl,\n      name: 'contact_last_name'\n    });\n    textInputView({\n      el: locationCityEl,\n      name: 'location_city_town'\n    });\n    textInputView({\n      el: locationNameEl,\n      name: 'location_name'\n    });\n    checkBoxView({\n      el: locationStateEl,\n      name: 'location_state'\n    });\n    filterTagView({\n      el: activeFiltersEl,\n      onClick: onFilterTagClick\n    });\n    checkBoxView({\n      el: statusEl,\n      name: 'status'\n    });\n    textInputView({\n      el: summaryEl,\n      name: 'summary'\n    });\n    textInputView({\n      el: assigneeEl,\n      name: 'assigned_to'\n    });\n    textInputView({\n      el: personalDescriptionEl,\n      name: 'violation_summary'\n    });\n    textInputView({\n      el: createdatestartEl,\n      name: 'create_date_start'\n    });\n    textInputView({\n      el: createdateendEl,\n      name: 'create_date_end'\n    });\n    textInputView({\n      el: complaintIDEl,\n      name: 'public_id'\n    });\n    textInputView({\n      el: statuteEl,\n      name: 'primary_statute'\n    });\n    clearFiltersView({\n      el: clearAllEl,\n      onClick: clearAllFilters\n    });\n    checkBoxView({\n      el: primaryIssueEl,\n      name: 'primary_complaint'\n    });\n    checkBoxView({\n      el: reportedReasonEl,\n      name: 'reported_reason'\n    });\n    checkBoxView({\n      el: relevantDetailsEl,\n      name: 'commercial_or_public_place'\n    });\n    checkBoxView({\n      el: intakeFormatEl,\n      name: 'intake_format'\n    });\n    checkBoxView({\n      el: hateCrimeEl,\n      name: 'hate_crime'\n    });\n    checkBoxView({\n      el: servicememberEl,\n      name: 'servicemember'\n    });\n    textInputView({\n      el: contactEmailEl,\n      name: 'contact_email'\n    });\n    checkBoxView({\n      el: referredEl,\n      name: 'referred'\n    });\n    checkBoxView({\n      el: languageEl,\n      name: 'language'\n    });\n    checkBoxView({\n      el: correctionalFacilityTypeEl,\n      name: 'correctional_facility_type'\n    });\n  }\n\n  // Bootstrap the filter code's data persistence and\n  // instantiate the controller that manages the UI components / views\n  function init() {\n    if (root.location.search === '') {\n      root.location.search = '?status=new&status=open&no_status=false';\n    }\n    var filterUpdates = getQueryParams(root.location.search, Object.keys(initialFilterState));\n\n    Object.keys(initialFilterState).forEach(function(key) {\n      filterDataModel[key] = initialFilterState[key];\n    });\n\n    mutateFilterDataWithUpdates(filterDataModel, filterUpdates);\n\n    filterController();\n  }\n\n  window.addEventListener('DOMContentLoaded', init);\n})(window, document);\n"],"names":["root","dom","toArray","arrayLike","Array","prototype","slice","call","wrapValue","maybeUnboxed","isArray","makeQueryParams","params","Object","keys","reduce","memo","key","paramValue","length","paramsString","accum","value","push","encodeURIComponent","join","initialFilterState","status","location_state","primary_complaint","contact_first_name","contact_last_name","contact_email","violation_summary","location_name","location_address_line_1","location_address_line_2","location_city_town","create_date_start","create_date_end","summary","assigned_to","public_id","primary_statute","reported_reason","commercial_or_public_place","intake_format","servicemember","hate_crime","referred","sort","page","per_page","no_status","language","correctional_facility_type","filterDataModel","mutateFilterDataWithUpdates","state","updates","entries","hasOwnProperty","data","map","decodeURIComponent","decodeFormData","formView","props","form","el","addEventListener","event","preventDefault","doSearch","checkBoxView","i","getValues","target","textInputView","name","Error","filterController","onClickHandler","formEl","getElementById","firstNameEl","querySelector","lastNameEl","locationCityEl","locationNameEl","locationStateEl","getElementsByName","activeFiltersEl","clearAllEl","statusEl","summaryEl","createdatestartEl","createdateendEl","assigneeEl","complaintIDEl","statuteEl","personalDescriptionEl","primaryIssueEl","reportedReasonEl","relevantDetailsEl","intakeFormatEl","hateCrimeEl","servicememberEl","contactEmailEl","referredEl","languageEl","correctionalFacilityTypeEl","filters","onClick","node","selections","filterName","getAttribute","indexOf","selectionData","splice","tagName","activeFilters","children","preparedFilters","finalQuery","window","location","action","checked","index","search","paramsWhitelist","paramsMap","acceptedParams","filterUpdates","queryString","URLSearchParams","forEach","document"],"mappings":"CAAA,SAAUA,EAAMC,GASd,SAASC,EAAQC,GACf,OAAOC,MAAMC,UAAUC,MAAMC,KAAKJ,GAIpC,SAASK,EAAUC,GACjB,OAAOL,MAAMM,QAAQD,GAAgBA,EAAe,CAACA,GAsCvD,SAASE,EAAgBC,GAEvB,OADWC,OAAOC,KAAKF,GACXG,OAAO,SAASC,EAAMC,GAChC,IAAIC,EAAaN,EAAOK,GAExB,IAAKC,IAAeA,EAAWC,OAC7B,OAAOH,EAILI,EADcZ,EAAUU,GAEzBH,OAAO,SAASM,EAAOC,GAGtB,OAFAD,EAAME,KAAoBN,EAmBnB,IAAMO,mBAnBkBF,IAExBD,GACN,IACFI,KAAK,KAIR,OAFAT,EAAKO,KAAKH,GAEHJ,GACN,IA2BL,IAAIU,EAAqB,CACvBC,OAAQ,GACRC,eAAgB,GAChBC,kBAAmB,GACnBC,mBAAoB,GACpBC,kBAAmB,GACnBC,cAAe,GACfC,kBAAmB,GACnBC,cAAe,GACfC,wBAAyB,GACzBC,wBAAyB,GACzBC,mBAAoB,GACpBC,kBAAmB,GACnBC,gBAAiB,GACjBC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXC,gBAAiB,GACjBC,gBAAiB,GACjBC,2BAA4B,GAC5BC,cAAe,GACfC,cAAe,GACfC,WAAY,GACZC,SAAU,GACVC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,2BAA4B,IAE1BC,EAAkB,GAOtB,SAASC,EAA4BC,EAAOC,GAC1C,IAAK,GAAM,CAAC1C,EAAKK,KAAUT,OAAO+C,QAAQD,GACpCD,EAAMG,eAAe5C,KACvByC,EAAMzC,GAKZ,SAAwB6C,GACtB,GAAI1D,MAAMM,QAAQoD,GAChB,OAAOA,EAAKC,IAAIC,oBAElB,OAAOA,mBAAmBF,GATTG,CAAe3C,IA2ClC,SAAS4C,EAASC,GAChB,IAAIC,EAAOD,EAAME,GAEjBD,EAAKE,iBAAiB,SAAU,SAAsBC,GACpDA,EAAMC,iBAENN,EAASO,SAASL,KA0CtB,SAASM,EAAaP,GACpB,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAME,GAAGlD,OAAQwD,IACnCR,EAAME,GAAGM,GAAGL,iBAAiB,SAAU,SAASC,GAC9CG,EAAaE,UAAUL,EAAMM,UAoBnC,SAASC,EAAcX,GACrB,IAAKA,EAAME,KAAOF,EAAMY,KACtB,MAAM,IAAIC,MACR,0HAIJb,EAAME,GAAGC,iBAAiB,SAAU,SAASC,GAC3Cf,EAAgBW,EAAMY,MAAQR,EAAMM,OAAOvD,QAQ/C,SAAS2D,IACP,IAvGIC,EAuGAC,EAASlF,EAAImF,eAAe,gBAC5BC,EAAcF,EAAOG,cAAc,mCACnCC,EAAaJ,EAAOG,cAAc,kCAClCE,EAAiBL,EAAOG,cAAc,oCACtCG,EAAiBN,EAAOG,cAAc,+BACtCI,EAAkBzF,EAAI0F,kBAAkB,kBACxCC,EAAkB3F,EAAIqF,cAAc,yBACpCO,EAAa5F,EAAIqF,cAAc,wBAC/BQ,EAAW7F,EAAI0F,kBAAkB,UACjCI,EAAYZ,EAAOG,cAAc,yBACjCU,EAAoBb,EAAOG,cAAc,iCACzCW,EAAkBd,EAAOG,cAAc,+BACvCY,EAAaf,EAAOG,cAAc,mBAClCa,EAAgBhB,EAAOG,cAAc,0BACrCc,EAAYjB,EAAOG,cAAc,kCACjCe,EAAwBlB,EAAOG,cAAc,mCAC7CgB,EAAiBrG,EAAI0F,kBAAkB,qBACvCY,EAAmBtG,EAAI0F,kBAAkB,mBACzCa,EAAoBvG,EAAI0F,kBAAkB,8BAC1Cc,EAAiBxG,EAAI0F,kBAAkB,iBACvCe,EAAczG,EAAI0F,kBAAkB,cACpCgB,EAAkB1G,EAAI0F,kBAAkB,iBACxCiB,EAAiB3G,EAAIqF,cAAc,+BACnCuB,EAAa5G,EAAI0F,kBAAkB,YACnCmB,EAAa7G,EAAI0F,kBAAkB,YACnCoB,EAA6B9G,EAAI0F,kBAAkB,8BAoDvDzB,EAAS,CACPG,GAAIc,IAENL,EAAc,CACZT,GAAIgB,EACJN,KAAM,uBAERD,EAAc,CACZT,GAAIkB,EACJR,KAAM,sBAERD,EAAc,CACZT,GAAImB,EACJT,KAAM,uBAERD,EAAc,CACZT,GAAIoB,EACJV,KAAM,kBAERL,EAAa,CACXL,GAAIqB,EACJX,KAAM,mBA1MJiC,GADiB7C,EA6MP,CACZE,GAAIuB,EACJqB,QAvEF,SAA0BC,GACxB,IAgBMC,EAhBFC,EAAaF,EAAKG,aAAa,qBAed,IAZK,CACxB,SACA,iBACA,oBACA,oBACA,gBACA,6BACA,kBACA,WACA,8BAEoCC,QAAQF,IAExCD,EAAa3D,EAAgB4D,GAC7BG,EAAgBL,EAAKG,aAAa,qBACtCF,EAAWK,OAAOL,EAAWG,QAAQC,GAAgB,GACrD/D,EAAgB4D,GAAcD,GAE9B3D,EAAgB4D,GAAc,GAGhClD,EAASO,SAASU,MAhKAd,GAChBa,EAAiBf,EAAM8C,QAE3BD,EAAQ1C,iBAAiB,QAAS,SAA8BC,GAC1D2C,EAAO3C,EAAMM,OACI,WAAjBqC,EAAKO,SACPvC,EAAegC,KA0MnBxC,EAAa,CACXL,GAAIyB,EACJf,KAAM,WAERD,EAAc,CACZT,GAAI0B,EACJhB,KAAM,YAERD,EAAc,CACZT,GAAI6B,EACJnB,KAAM,gBAERD,EAAc,CACZT,GAAIgC,EACJtB,KAAM,sBAERD,EAAc,CACZT,GAAI2B,EACJjB,KAAM,sBAERD,EAAc,CACZT,GAAI4B,EACJlB,KAAM,oBAERD,EAAc,CACZT,GAAI8B,EACJpB,KAAM,cAERD,EAAc,CACZT,GAAI+B,EACJrB,KAAM,qBA3IgBZ,EA6IP,CACfE,GAAIwB,EACJoB,QA/EF,WACE,MAAMS,EAAgBxH,EAAQ0F,EAAgB+B,UAE9C,IAAIhE,EAAU+D,EAAc3G,OAAO,SAAS4C,EAASuD,GAC/CE,EAAaF,EAAKG,aAAa,oBAOnC,OALoB7G,EADIgD,EAAgB4D,IAElBjG,SACpBwC,EAAQyD,GAAc1F,EAAmB0F,IAGpCzD,GACN,IAEHF,EAA4BD,EAAiBG,GAC7CO,EAASO,SAASU,MA9Edd,GAAGC,iBAAiB,QAASH,EAAM8C,SAgJzCvC,EAAa,CACXL,GAAIiC,EACJvB,KAAM,sBAERL,EAAa,CACXL,GAAIkC,EACJxB,KAAM,oBAERL,EAAa,CACXL,GAAImC,EACJzB,KAAM,+BAERL,EAAa,CACXL,GAAIoC,EACJ1B,KAAM,kBAERL,EAAa,CACXL,GAAIqC,EACJ3B,KAAM,eAERL,EAAa,CACXL,GAAIsC,EACJ5B,KAAM,kBAERD,EAAc,CACZT,GAAIuC,EACJ7B,KAAM,kBAERL,EAAa,CACXL,GAAIwC,EACJ9B,KAAM,aAERL,EAAa,CACXL,GAAIyC,EACJ/B,KAAM,aAERL,EAAa,CACXL,GAAI0C,EACJhC,KAAM,+BA5PVb,EAASO,SAAW,SAAkBL,GACpC,IAAIwD,GA5GuBhH,EA4GeD,EAAgB6C,IA3G5CrC,OAASP,EAAOa,KAAK,KAAO,GA4GtCoG,EACAD,EACW,IAAMA,EAFJ,GAIjBE,OAAOC,SAAW3D,EAAK4D,OAASH,GAoClCnD,EAAaE,UAAY,SAASP,GAC5BA,EAAG4D,QACLzE,EAAgBe,MAAMM,OAAOE,MAAMxD,KAAK8C,EAAG/C,QAEvC4G,EAAQ1E,EAAgBe,MAAMM,OAAOE,MAAMuC,QAAQjD,EAAG/C,OAC1DkC,EAAgBe,MAAMM,OAAOE,MAAMyC,OAAOU,EAAO,KAkOrDJ,OAAOxD,iBAAiB,mBAfxB,WAC+B,KAAzBtE,EAAK+H,SAASI,SAChBnI,EAAK+H,SAASI,OAAS,2CAEzB,IA/amCC,EAC/BC,EAEAC,EA4aAC,GA/akBC,EA+aaxI,EAAK+H,SAASI,OA/adC,EA+asBvH,OAAOC,KAAKY,GA9ajE2G,EAAY,GACZF,EAAS,IAAIM,gBAAgBD,GAC7BF,EAAkBF,aAA2BhI,OAASgI,GAAoB,GAE9ED,EAAOO,QAAQ,SAASpH,EAAO8F,GACa,GAAtCkB,EAAehB,QAAQF,KACzBiB,EAAUjB,GAAciB,EAAUjB,IAAe,GAE7CiB,EAAUjB,GAAYE,QAAQhG,GAAS,GACzC+G,EAAUjB,GAAY7F,KAAKC,mBAAmBF,OAK7C+G,GAkaPxH,OAAOC,KAAKY,GAAoBgH,QAAQ,SAASzH,GAC/CuC,EAAgBvC,GAAOS,EAAmBT,KAG5CwC,EAA4BD,EAAiB+E,GAE7CtD,MArdJ,CAydG6C,OAAQa"}