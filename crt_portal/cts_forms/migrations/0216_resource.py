# Generated by Django 4.2.11 on 2024-08-19 18:25

import cts_forms.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cts_forms', '0215_alter_reportattachment_report'),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the resource as it will appear in lists and dropdowns.', max_length=255)),
                ('section', models.TextField(blank=True, choices=[('ADM', 'Administrative'), ('APP', 'Appellate'), ('CRM', 'Criminal'), ('DRS', 'Disability Rights'), ('ELS', 'Employment Litigation'), ('EOS', 'Educational Opportunities'), ('FCS', 'Federal Coordination and Compliance'), ('HCE', 'Housing and Civil Enforcement'), ('IER', 'Immigrant and Employee Rights'), ('POL', 'Policy'), ('SPL', 'Special Litigation'), ('VOT', 'Voting')], default=None, help_text='The section to which this resource applies.', null=True)),
                ('email', models.CharField(blank=True, max_length=225, null=True, validators=[cts_forms.validators.validate_email_address])),
                ('secondary_email', models.CharField(blank=True, max_length=225, null=True, validators=[cts_forms.validators.validate_email_address])),
                ('phone', models.CharField(blank=True, max_length=225, null=True, validators=[django.core.validators.RegexValidator('^(?=^\\D*(\\d\\D*){7,15}$)(?=^(?:(?![a-zA-Z]).)*$).*$', message='If you submit a phone number, please make sure to include between 7 and 15 digits. The characters "+", ")", "(", "-", and "." are allowed. Please include country code if entering an international phone number.')])),
                ('secondary_phone', models.CharField(blank=True, max_length=225, null=True, validators=[django.core.validators.RegexValidator('^(?=^\\D*(\\d\\D*){7,15}$)(?=^(?:(?![a-zA-Z]).)*$).*$', message='If you submit a phone number, please make sure to include between 7 and 15 digits. The characters "+", ")", "(", "-", and "." are allowed. Please include country code if entering an international phone number.')])),
                ('contact_first_name', models.CharField(blank=True, max_length=225, null=True)),
                ('contact_last_name', models.CharField(blank=True, max_length=225, null=True)),
                ('contact_title', models.CharField(blank=True, max_length=225, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=225, null=True, validators=[cts_forms.validators.validate_email_address])),
                ('contact_phone', models.CharField(blank=True, max_length=225, null=True, validators=[django.core.validators.RegexValidator('^(?=^\\D*(\\d\\D*){7,15}$)(?=^(?:(?![a-zA-Z]).)*$).*$', message='If you submit a phone number, please make sure to include between 7 and 15 digits. The characters "+", ")", "(", "-", and "." are allowed. Please include country code if entering an international phone number.')])),
                ('secondary_contact_first_name', models.CharField(blank=True, max_length=225, null=True)),
                ('secondary_contact_last_name', models.CharField(blank=True, max_length=225, null=True)),
                ('secondary_contact_title', models.CharField(blank=True, max_length=225, null=True)),
                ('secondary_contact_email', models.CharField(blank=True, max_length=225, null=True, validators=[cts_forms.validators.validate_email_address])),
                ('secondary_contact_phone', models.CharField(blank=True, max_length=225, null=True, validators=[django.core.validators.RegexValidator('^(?=^\\D*(\\d\\D*){7,15}$)(?=^(?:(?![a-zA-Z]).)*$).*$', message='If you submit a phone number, please make sure to include between 7 and 15 digits. The characters "+", ")", "(", "-", and "." are allowed. Please include country code if entering an international phone number.')])),
                ('notes', models.TextField(blank=True, max_length=7000, null=True)),
                ('tags', models.ManyToManyField(blank=True, to='cts_forms.tag')),
            ],
        ),
    ]
