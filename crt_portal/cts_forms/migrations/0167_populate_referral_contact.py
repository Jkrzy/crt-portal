# Generated by Django 3.2.17 on 2023-03-03 20:22

from django.db import migrations, models
import django.db.models.deletion


def remove_referral_contacts(apps, schema_editor):
    del schema_editor  # Unused

    ReferralContact = apps.get_model('cts_forms', 'ReferralContact')
    ReferralContact.objects.all().delete()


def add_referral_contacts(apps, schema_editor):
    del schema_editor  # Unused

    ReferralContact = apps.get_model('cts_forms', 'ReferralContact')

    # doe
    ReferralContact.objects.create(
        name='U.S. Department of Education - Office for Civil Rights',
        machine_name='doe',
        notes='',
        addressee_text='Office for Civil Rights\nU.S. Department of Education\n400 Maryland Avenue, SW\nWashington, DC 20202-1100',
        addressee_emails='',
        show_as_referral=True,
    )

    # Hhs
    ReferralContact.objects.create(
        name='Department of Health and Human Services - Office for Civil Rights',
        machine_name='hhs',
        notes='',
        addressee_text='Office for Civil Rights\nDepartment of Health and Human Services\n200 Independence Avenue, SW, Room 515F\nHumphrey Building\nWashington, D.C.  20201',
        addressee_emails='',
        show_as_referral=True,
    )

    # Eeoc
    ReferralContact.objects.create(
        name='U.S. Equal Employment Opportunity Commission - Field Management Programs',
        machine_name='eeoc',
        notes='',
        addressee_text='Field Management Programs\nU.S. Equal Employment Opportunity Commission\n131 M Street, N.E.\nWashington, DC  20507',
        addressee_emails='',
        show_as_referral=True,
    )

    # DotAcp
    ReferralContact.objects.create(
        name='U.S. Department of Transportation - Aviation Consumer Protection Division',
        machine_name='dot-acp',
        notes='',
        addressee_text='Director of Civil Rights Advocacy\nAviation Consumer Protection Division\nDepartment of Transportation\n1200 New Jersey Avenue, S.E., C-75\nW96-432\nWashington, D.C.  20590',
        addressee_emails='',
        show_as_referral=True,
    )

    # DotFta
    ReferralContact.objects.create(
        name='U.S. Department of Transportation - Federal Transit Administration',
        machine_name='dot-fta',
        notes='',
        addressee_text='Associate Administrator for Civil Rights\nOffice of Civil Rights\nFederal Transit Administration\nU.S. Department of Transportation\n1200 New Jersey Avenue, SE, Room E54-312\nWashington, D.C.  20590',
        addressee_emails='',
        show_as_referral=True,
    )

    # DotOcr
    ReferralContact.objects.create(
        name='U.S. Department of Transportation - Office of Civil Rights',
        machine_name='dot-ocr',
        notes='',
        addressee_text='Associate Director\nEEO Programs Division\nDepartmental Office of Civil Rights\nOffice of the Secretary\nU.S. Department of Transportation \n1200 New Jersey Avenue, SE, Room W78-304\nWashington, D.C.  20590',
        addressee_emails='',
        show_as_referral=True,
    )

    # SsaOpi
    ReferralContact.objects.create(
        name='Social Security Administration - Office of Public Inquiries',
        machine_name='ssa-opi',
        notes='',
        addressee_text='Director of the Office of Policy, Procedures, and\nOperations Support\nOffice of Public Inquiries\nSocial Security Administration\n6401 Security Boulevard\nWindsor Park Building\nBaltimore, MD  21235',
        addressee_emails='',
        show_as_referral=True,
    )

    # SsaOgc
    ReferralContact.objects.create(
        name='Social Security Administration - Office of the General Counsel',
        machine_name='ssa-ogc',
        notes='',
        addressee_text='Labor and Employment Division\nOffice of General Law\nOffice of the General Counsel\nSocial Security Administration\nP.O. Box 17788  \nBaltimore, MD  21235-7788',
        addressee_emails='',
        show_as_referral=True,
    )

    # Va
    ReferralContact.objects.create(
        name='Department of Veterans Affairs - For Resolution Management (08)',
        machine_name='va',
        notes='',
        addressee_text='Deputy Assistant Secretary\nFor Resolution Management (08)\nDepartment of Veterans Affairs\n810 Vermont Avenue, N.W.\nWashington, D.C.  20420',
        addressee_emails='',
        show_as_referral=True,
    )


class Migration(migrations.Migration):

    replaces = [('cts_forms', '0167_add_referral_contact'), ('cts_forms', '0168_link_referrals_to_templates'), ('cts_forms', '0169_populate_referral_contact')]

    dependencies = [
        ('cts_forms', '0166_add_reporting_embeds'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReferralContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A short name to show in dropdown fields.', max_length=500, unique=True)),
                ('machine_name', models.CharField(help_text='A short, non-changing name to be used in template code.', max_length=500, unique=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about how to use this referral information.', max_length=7000)),
                ('addressee_text', models.TextField(blank=True, help_text='What to print on printed referral forms.', max_length=7000)),
                ('addressee_emails', models.TextField(blank=True, help_text="A comma-separated list of emails to include on email referrals (for example: 'a@a.gov, b@b.gov')", max_length=7000)),
                ('show_as_referral', models.BooleanField(default=True, help_text='Whether to list this contact as a referral option.')),
            ],
        ),
        migrations.AddField(
            model_name='responsetemplate',
            name='referral_contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='response_templates', to='cts_forms.referralcontact'),
        ),
        migrations.RunPython(add_referral_contacts, remove_referral_contacts),
    ]
